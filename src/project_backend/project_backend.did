// ========== Type Definitions ==========
type PropertyId = nat;
type Timestamp = nat64;
type LeaseId = nat;
type PaymentId = nat;

type UserInvestment = record {
  property_id : PropertyId;
  shares_owned : nat;
};

type UserData = record {
  total_investment : nat;
  current_value : nat;
  monthly_income : nat;
  total_return : nat;
  user_registered_properties : vec PropertyId;
  user_invested_properties : vec UserInvestment;
};

type PropertyAddress = record {
  street : text;
  city : text;
  state : text;
  zipcode : nat64;
};

type PropertyFinancialDetails = record {
  total_property_value : nat;
  available_shares : nat;
  price_per_share : nat;
};

type PropertyType = variant {
  Residential;
  Industrial;
  Commercial;
  MixedUse;
};

type Amenity = variant {
  Parking;
  Pool;
  Gym;
  Security;
  Garden;
  Balcony;
  AirConditioning;
  Heating;
  Elevator;
  Storage;
};

type Property = record {
  id : PropertyId;
  title : text;
  property_type : PropertyType;
  address : PropertyAddress;
  financial_details : PropertyFinancialDetails;
  property_description : text;
  amenities : vec Amenity;
  images : vec text;
  monthly_rent : nat;
  collected_rent : nat;
  investors : vec record { principal; nat };
  owner : principal;
};

// ========== Lease Definitions ==========
type LeaseStatus = variant {
  Active;
  Terminated;
  Pending;
};

type Lease = record {
  lease_id : LeaseId;
  property_id : PropertyId;
  tenant : principal;
  tenant_name : text;
  tenant_email : text;
  tenant_phone : text;
  lease_start_date : text;
  lease_end_date : text;
  monthly_rent : nat;
  security_deposit : nat;
  lease_terms : text;
  special_conditions : text;
  status : LeaseStatus;
};

// ========== Service ==========
service : {
  register_user : () -> (text);

  get_user_data : () -> (UserData);

  register_property : (
    text,      // title
    text,      // street
    text,      // city
    text,      // state
    nat64,     // zipcode
    text,      // property type
    nat,       // total_property_value
    nat,       // available_shares
    nat,       // price_per_share
    text,      // property_description
    vec text,  // amenities
    vec text,  // images
    nat        // monthly_rent
  ) -> (text);

  get_all_properties : () -> (vec Property) query;

  get_user_registered_properties : () -> (vec Property) query;

  // ===== Lease APIs =====
  register_lease : (
    PropertyId,
    text, // tenant_name
    text, // tenant_email
    text, // tenant_phone
    text, // lease_start_date
    text, // lease_end_date
    nat,  // monthly_rent
    nat,  // security_deposit
    text, // lease_terms
    text  // special_conditions
  ) -> (text);

  get_all_leases : () -> (vec Lease) query;

  get_my_leases : () -> (vec Lease) query;

  buy_share : (PropertyId, nat) -> (text);
};
